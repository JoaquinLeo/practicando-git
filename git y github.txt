https://www.youtube.com/watch?v=suzMNqDQiyU&t=998s&ab_channel=jonmircha

git --version --> para obtener la version

git config --global user.name "Jonathan MirCha"

git config --global user.email jonmircha@gmail.com

git config --global user.ui true

git config --global init.defaultBranch main

git config --list
# asignando visual studio code como editor de configuración de git
git config --global core.editor "code --wait"
git config --global -e
# para estandarizar los saltos de línea en windows
git config --global core.autocrlf true
# para estandarizar los saltos de línea en linux/mac
git config --global core.autocrlf input
# ver todas las opciones de la configuración en la terminal
git config -h
# ver todas las opciones de la configuración en el navegador
git help config


git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:JoaquinLeo/practicando-git.git
git push -u origin master <-- Este solo se hace una vez

git push <-- Ya despues de git push -u origin master puedo usar solo --> git push

git pull


# crear rama
git branch nombre-rama

# cambiar de rama
git checkout nombre-rama

# crear una rama y cambiarte a ella
git checkout -b rama

# eliminar rama
git branch -d nombre-rama

# eliminar ramas remotas
git push origin --delete nombre-rama

#eliminar rama (forzado)
git branch -D nombre-rama

# listar todas las ramas del repositorio
git branch

# lista ramas no fusionadas a la rama actual
git branch --no-merged

# lista ramas fusionadas a la rama actual
git branch --merged

# rebasar ramas
git checkout rama-secundaria
git rebase rama-principal

# Ejemplo practico

git checkout -b html

git add . 

git commit -m "comentario"

git push -u origin html

# Fucionando ramas

# Fucion automatica
git merge nombre-rama


# Para eliminar una rama del repositorio remoto
git push origin --delete nombre-rama



# sin editar el mensaje del último commit
git commit --amend --no-edit

# editando el mensaje del último commit
git commit --amend -m "nuevo mensaje para el último commit"

# eliminar el último commit
git reset --hard HEAD~1

# Ver todos los commits
$ git log --oneline
